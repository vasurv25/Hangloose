apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hangloose"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 9
        versionName "1.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        hangLooseDebug {
            keyAlias "${KEYSTORE_DEBUG_KEYALIAS}"
            keyPassword "${KEYSTORE_DEBUG_KEYPASS}"
            storeFile file("${KEYSTORE_DEBUG_FILE}")
            storePassword "${KEYSTORE_DEBUG_STOREPASS}"
        }
        hangLooseRelease {
            keyAlias "${KEYSTORE_RELEASE_KEYALIAS}"
            keyPassword "${KEYSTORE_RELEASE_KEYPASS}"
            storeFile file("${KEYSTORE_RELEASE_FILE}")
            storePassword "${KEYSTORE_RELEASE_STOREPASS}"
        }
    }
    dataBinding.enabled = true
    buildTypes {
        release {
            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [appName: project.APPLICATION_NAME]
            signingConfig android.signingConfigs.hangLooseRelease
            buildConfigField "String", "BASE_URL", '"https://api.hangloose.in/"'
        }
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [appName: "$project.APPLICATION_NAME" + "_Debug"]
            signingConfig android.signingConfigs.hangLooseDebug
            buildConfigField "String", "BASE_URL", '"https://dev.hangloose.in/"'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def appName = project.APPLICATION_NAME
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            outputFileName = appName + "-" + buildType + "-" + versionName + "-" + "(" + versionCode + ")" + ".apk"
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.facebook.android:facebook-login:[5,6)'

    // kotlin lint dependency
    ktlint "com.github.shyiko:ktlint:0.15.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // retrofit library for network call
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibraryVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibraryVersion"
    // gson
    implementation 'com.google.code.gson:gson:2.8.5'
    //interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    //country code picker
    implementation 'com.hbb20:ccp:1.7.1'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    //Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'com.jakewharton.rxbinding:rxbinding-kotlin:0.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // Page indicator for ViewPager
    implementation 'me.relex:circleindicator:1.2.2@aar'
    //Segmented buttons
    implementation 'com.github.ceryle:SegmentedButton:v2.0.2'
    implementation 'info.hoang8f:android-segmented:1.0.6'
    //Swipeable cards
    implementation 'com.github.patgdut:RadioRealButton:v2.1.2'
    implementation 'com.mindorks:placeholderview:0.7.3'
    //Glide
    implementation ("com.github.bumptech.glide:glide:4.9.0") {
        exclude group: "com.android.support"
    }
    //Play Services
    implementation 'com.google.android.gms:play-services-location:' + google_play_services
    implementation 'com.google.android.gms:play-services-maps:' + google_play_services
    implementation 'com.google.android.gms:play-services-places:' + google_play_services
    implementation 'com.google.android.gms:play-services-auth:' + google_play_services
    implementation 'com.google.android.gms:play-services-base:16.0.1'
    implementation 'com.google.android.gms:play-services-identity:16.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:16.0.0'

    implementation 'com.google.android.libraries.places:places:2.0.0'

    //Expandable TextView
    implementation 'com.ms-square:expandableTextView:0.1.4'
    //Range Slider
    implementation 'io.apptik.widget:multislider:1.3'
    // Room (use 1.1.0-alpha1 for latest alpha)
    implementation 'androidx.room:room-runtime:2.0.0'
//    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    kapt 'androidx.room:room-compiler:2.0.0'
    //fonts
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    //pinch to zoom images with Glide
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation ('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true;
    }
}

//task ktlint(type: JavaExec, group: "verification") {
//    description = "Check Kotlin code style."
//    classpath = configurations.ktlint
//    main = "com.github.shyiko.ktlint.Main"
//    args "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml", "src/**/*.kt"
//}
//
//preBuild.dependsOn ktlint
//check.dependsOn ktlint
//
//task ktlintFormat(type: JavaExec, group: "formatting") {
//    description = "Fix Kotlin code style deviations."
//    classpath = configurations.ktlint
//    main = "com.github.shyiko.ktlint.Main"
//    args "-F", "src/**/*.kt"
//}

